name: Release

on:
  push:
    branches:
      - "main"

env:
  CRATE_NAME: umm
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ github.token }}
  RUST_BACKTRACE: 1

jobs:
  test:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-aaarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            bin: umm
            name: umm-aarch64-unknown-linux-musl

          - os_name: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            bin: umm
            name: umm-x86_64-unknown-linux-musl

          - os_name: Windows-aarch64
            os: windows-latest
            target: aarch64-pc-windows-msvc
            bin: umm.exe
            name: umm-aarch64-pc-windows-msvc.exe

          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-gnu
            bin: umm.exe
            name: umm-x86_64-pc-windows-gnu.exe

          - os_name: Windows-x86_64-msvc
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: umm.exe
            name: umm-x86_64-pc-windows-msvc.exe

          - os_name: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: umm
            name: umm-x86_64-apple-darwin

          - os_name: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: umm
            name: umm-aarch64-apple-darwin

        toolchain:
          - nightly
    steps:
      - uses: actions/checkout@v3
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
      - name: Configure Git
        run: |
          git config --global user.email "jdoe@example.com"
          git config --global user.name "J. Doe"
      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: contains(matrix.platform.name, 'musl')
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--locked --release"

      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          mv ./${{ matrix.platform.bin }} ../../../${{ matrix.platform.name }}
          cd -

      - name: Publish release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: umm-${{ matrix.platform.os_name }}
          path: "umm-*"

      - name: Generate SHA-256
        run: shasum -a 256 ${{ matrix.platform.name }}
        if: |
          matrix.platform.os == 'macOS-latest'

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "umm-*"
          tag_name: "spring_24"
          # body_path: Changes.md
